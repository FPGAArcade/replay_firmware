name: Replay_Boot

on:
  push:
    paths:
    - '.github/workflows/Replay_Boot.yml'
    - 'sw/arm_sw/**'
  pull_request:
    branches: master
    paths:
    - '.github/workflows/Replay_Boot.yml'
    - 'sw/arm_sw/**'

jobs:
  Build_R1_Firmware:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install deps
      run: sudo apt-get install gcc-arm-none-eabi libarchive-zip-perl
      
    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw
        ./compile.sh

    - name: Package
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw
        ./package.sh
        mkdir -p $GITHUB_WORKSPACE/artifact
        find . -maxdepth 1 -type f -name "*.zip" -exec mv {} $GITHUB_WORKSPACE/artifact \;
        
    - uses: actions/upload-artifact@v1
      with:
        name: R1_Firmware
        path: artifact

  Verify_MacOSX_Build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

#    version 8-2018-q4-major
#    brew install arm-none-eabi-gcc
    - name: Install deps
      run: |
        brew tap ArmMbed/homebrew-formulae
        brew install https://raw.githubusercontent.com/ARMmbed/homebrew-formulae/404948446fc686d76799f09dc5074d611ee6db72/arm-none-eabi-gcc.rb
      
    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw
        ./compile.sh

  Verify_Windows_Build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install deps
      run: choco install gcc-arm-embedded --version=7.2.1.20170904
      
    - name: Build
      run: |
        cd %GITHUB_WORKSPACE%\sw\arm_sw
        compile.bat
      shell: cmd

  Build_HOSTED:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install deps
      run: sudo apt-get install libncurses5-dev

    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw/Replay_Boot
        HOSTED=1 make

  Build_VIDOR:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve Arduino IDE
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw/Replay_Boot
        ./install_arduino_vidor.sh

    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw/Replay_Boot
        VIDOR=1 make

    - name: Package
      run: |
        cd $GITHUB_WORKSPACE/sw/arm_sw
        ./package_vidor.sh
        mkdir -p $GITHUB_WORKSPACE/artifact
        find . -maxdepth 1 -type f -name "*.zip" -exec mv {} $GITHUB_WORKSPACE/artifact \;
        
    - uses: actions/upload-artifact@v1
      with:
        name: replay_mkrvidor4000
        path: artifact
